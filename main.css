/* Custom properties */
:root {
    --color-text: #b9b9b9;
    --color-text-button: #535353;
    --color-bg-dark: #232323;
    --color-bg-light-hover: #777777;
    --color-active: #D7FF75;
    --color-correct: #44D3B7;
    --color-wrong: #D34468;
    --color-found: #444;
    --color-gradient-main: linear-gradient(90deg, #D7FF75 0%, #44D3B7 100%);
    --color-gradient-grey: linear-gradient(90deg, #575656 0%, #8b8b8b 100%);
    --font-family-heading: "Lora", serif;
    --font-family-main: "Nunito", sans-serif;
}

/* Elements */
body {
    font-family: var(--font-family-main);
    color: var(--color-text);
    background-color: var(--color-bg-dark);
}

h1 {
    text-align: center;
    font-size: 2.75rem;
    font-family: var(--font-family-heading);
    font-optical-sizing: auto;
    font-weight: 600;
    font-style: normal;
    line-height: 1;
}

h2 {
    text-align: center;
    font-weight: 400;
    letter-spacing: .1em;
    font-size: 1rem;
    margin: 0;
}

h3 {
    text-align: center;
    letter-spacing: .1em;
    font-size: 1.125rem;
    margin: .25em;
}

p {
    max-width: 540px;
    margin: 2em auto;
}

/* The game wrap */
#hexagonGame {
    padding: 24px 18px;
}

/* The tile grid */
#tileGrid {
    display: flex;
    flex-direction: column;
    margin: 36px auto 48px;
    position: relative;
}

.tile-row {
    display: flex;
    justify-content: center;
}

.tile-row + .tile-row {
    margin-top: -10px;
}

.tile {
    width: 55px;
    height: 63px;
    clip-path: polygon(50% 0%, 100% 25%, 100% 75%, 50% 100%, 0% 75%, 0% 25%);
    margin: 0 3px;
    line-height: 63px;
    text-align: center;
    user-select: none;
    cursor: pointer;
    pointer-events: none;
    font-size: 1.5rem;
    font-weight: 900;
    color: var(--color-bg-dark);
    background-color: var(--color-text);
    transition: background-color .2s linear;
}

@media (hover: hover) {
    .tile:hover {
        background-color: var(--color-bg-light-hover);
    }
}

.tile.active {
    background-color: var(--color-active);
}

/* Correct animation */
@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.04);
    }
    100% {
        transform: scale(1);
    }
}

.tile.correct {
    background-color: var(--color-correct);
    /* animation: pulse 0.75s infinite alternate; */
}

.tile.wrong {
    background-color: var(--color-wrong);
}

.tile.found {
    background-color: var(--color-found);
}

/* UI */
#btnPrimary {
    display: block;
    margin: 0 auto;
    cursor: pointer;
    border: none;
    padding: 10px 18px;
    color: var(--color-text-button);
    background: var(--color-gradient-main);
    text-transform: uppercase;
    border-radius: 8px;
    font-weight: 900;
    letter-spacing: .1em;
    background-size: calc(100% + 40px) !important;
    background-position: 0px;
    transition: background-position .4s ease, color .4s ease, transform .1s ease-in;
    outline: none;
}

@media (hover: hover) {
    #btnPrimary:hover {
        background-position: -40px !important;
        color: var(--color-bg-dark);
    }
}

/* Round info */
#roundInfoWrap {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    text-align: center;
    padding: 24px 0;
    max-width: 284px;
    margin: 0 auto;
}

.countdown-wrap, .target-wrap, .points-wrap {
    display: none;
    width: 33.33%;
    padding: 0 12px;
    font-size: 1.5rem;
    font-weight: 900;
}

#feedback {
    width: 100%;
    font-size: 1.5rem;
    font-weight: 900;
    padding: 18px;
}

/* Game states */
#hexagonGame.memorising #btnPrimary {
    transform: scale(0);
}

#hexagonGame.memorising .countdown-wrap, #hexagonGame.recall .countdown-wrap {
    display: block;
}

#hexagonGame.recall .tile {
    pointer-events: all;
}

#hexagonGame.recall #btnPrimary {
    background: var(--color-gradient-grey);
    pointer-events: none;
}

#hexagonGame.recall .target-wrap, #hexagonGame.recall .points-wrap {
    display: block;
}

#hexagonGame.results .target-wrap, #hexagonGame.results .points-wrap {
    display: block;
}

#hexagonGame:has(.comboed) #btnPrimary {
    background: var(--color-gradient-main);
    pointer-events: all;
}

#hexagonGame.correct #points {
    color: var(--color-correct);
}

#hexagonGame.wrong #points {
    color: var(--color-wrong);
}


